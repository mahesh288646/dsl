@Grab('com.xlson.groovycsv:groovycsv:1.3')
import static com.xlson.groovycsv.CsvParser.parseCsv
 
//fh = new File('/var/lib/jenkins/workspace/SampleDSL3/data/convertcsv.csv')
//def csv_content = fh.getText('utf-8')
 
//def data_iterator = parseCsv(csv_content, separator: '=', readFirstLine: true)
// println data_iterator.getClass()  // class com.xlson.groovycsv.CsvIterator
//println data_interator[0] data_interator[1]
Properties props = new Properties()
File propsFile = new File('/var/lib/jenkins/workspace/SampleDSL3/data/environment.properties')
props.load(propsFile.newDataInputStream())
println props.getProperty('Env')
def AppName1 = props.getProperty('AppName')
//println $AppName1
println props.getProperty('AppName')
multibranchPipelineJob("$AppName1") {
    branchSources {
        git {
            def GitName = props.getProperty('AppName')
            id('12121212') // IMPORTANT: use a constant and unique identifier mahesh
            remote('https://github.com/mahesh288646/"$GitName.git"')
            credentialsId('Git-ID')

        }
    }
    orphanedItemStrategy {
        discardOldItems {
            numToKeep(0)
        }
    }
}